if(CONFIG_SOC_WIFI_SUPPORTED)
	message(STATUS "Not using Hosted Wi-Fi")
else()
	message(STATUS "Using Hosted Wi-Fi")
	set(FG_root_dir ".")
	set(host_dir "${FG_root_dir}/./")
	set(src_dir "${host_dir}/src")
	set(interface_dir "${host_dir}/interface")
	set(port_dir "${host_dir}/port")
	set(common_dir "${FG_root_dir}/common")

	set(COMPONENT_ADD_INCLUDEDIRS "${src_dir}" "${port_dir}" "${src_dir}/api")
	set(COMPONENT_SRCS "${src_dir}/esp_hosted_host_init.c" "${src_dir}/api/esp_hosted_api.c" "${src_dir}/drivers/transport/transport_drv.c" "${src_dir}/drivers/serial/serial_ll_if.c" "${src_dir}/utils/common.c" "${src_dir}/utils/util.c" "${src_dir}/utils/stats.c" "${port_dir}/os_wrapper.c" "${src_dir}/drivers/serial/serial_drv.c")

	list(APPEND COMPONENT_ADD_INCLUDEDIRS "." "${src_dir}/api" "${src_dir}/drivers/transport" "${src_dir}/drivers/transport/spi" "${src_dir}/drivers/transport/sdio" "${src_dir}/drivers/serial" "${src_dir}/utils")

	# rpc files - wrap -> slaveif -> core
	set(rpc_dir "${src_dir}/drivers/rpc")
	set(rpc_core_dir "${rpc_dir}/core")
	set(rpc_slaveif_dir "${rpc_dir}/slaveif")
	set(rpc_wrap_dir "${rpc_dir}/wrap")
	list(APPEND COMPONENT_SRCS  "${rpc_core_dir}/rpc_core.c" "${rpc_core_dir}/rpc_req.c" "${rpc_core_dir}/rpc_rsp.c" "${rpc_core_dir}/rpc_evt.c"
		"${rpc_slaveif_dir}/rpc_slave_if.c"
		"${rpc_wrap_dir}/rpc_wrap.c")
	list(APPEND COMPONENT_ADD_INCLUDEDIRS "${rpc_core_dir}" "${rpc_slaveif_dir}" "${rpc_wrap_dir}")

	# virtual serial
	set(virt_serial_dir "${src_dir}/drivers/virtual_serial_if")
	list(APPEND COMPONENT_SRCS  "${virt_serial_dir}/serial_if.c")
	list(APPEND COMPONENT_ADD_INCLUDEDIRS "${virt_serial_dir}")

	# mempool
	list(APPEND COMPONENT_SRCS "${src_dir}/drivers/mempool/mempool.c")
	list(APPEND COMPONENT_ADD_INCLUDEDIRS "${src_dir}/drivers/mempool" )

	# slave and host common files
	list(APPEND COMPONENT_SRCS "${common_dir}/protobuf-c/protobuf-c/protobuf-c.c" "${common_dir}/proto/esp_hosted_rpc.pb-c.c" )
	list(APPEND COMPONENT_ADD_INCLUDEDIRS "${common_dir}/include" "${common_dir}/protobuf-c" "${common_dir}/proto" )

	# transport files
	if(CONFIG_ESP_SDIO_HOST_INTERFACE)
		list(APPEND COMPONENT_SRCS "${src_dir}/drivers/transport/sdio/sdio_drv.c" "${port_dir}/sdio_wrapper.c")
	else(CONFIG_ESP_SPI_HOST_INTERFACE)
		list(APPEND COMPONENT_SRCS "${src_dir}/drivers/transport/spi/spi_drv.c" "${port_dir}/spi_wrapper.c")
	endif()
endif()

idf_component_register(SRCS ${COMPONENT_SRCS}
	REQUIRES soc esp_event esp_netif esp_timer driver esp_wifi esp_wifi_remote sdmmc
	EXCLUDE_SRCS ${EXCLUDE_COMPONENT_SRCS}
	INCLUDE_DIRS ${COMPONENT_ADD_INCLUDEDIRS})

idf_component_set_property(${COMPONENT_NAME} WHOLE_ARCHIVE TRUE)
