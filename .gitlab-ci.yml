stages:
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

setup_ssh:
  stage: build
  script:
  # add gitlab ssh key
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo -n $GITLAB_KEY > ~/.ssh/id_rsa_base64
  - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

deploy_master_github:
  stage: deploy
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - deploy
  when: manual
  only:
    - master
  script:
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - echo -n $GH_KEY > ~/.ssh/id_rsa_base64
      - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - git remote remove github &>/dev/null || true
      - git remote add github git@github.com:espressif/esp-hosted.git
      - git push github "${CI_COMMIT_SHA}:refs/heads/${CI_COMMIT_REF_NAME}"
  dependencies:
    - setup_ssh

.deploy_force_master_github:
  stage: deploy
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - deploy
  when: manual
  only:
    - master
  script:
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - echo -n $GH_KEY > ~/.ssh/id_rsa_base64
      - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - git remote remove github &>/dev/null || true
      - git remote add github git@github.com:espressif/esp-hosted.git
      - git push -f github "${CI_COMMIT_SHA}:refs/heads/${CI_COMMIT_REF_NAME}"
  dependencies:
    - setup_ssh

deploy_esp32p4_github:
  stage: deploy
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - deploy
  when: manual
  only:
    - feature/esp_as_mcu_host
  script:
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - echo -n $GH_KEY > ~/.ssh/id_rsa_base64
      - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - git remote remove github &>/dev/null || true
      - git remote add github git@github.com:espressif/esp-hosted.git
      - git push github "${CI_COMMIT_SHA}:refs/heads/${CI_COMMIT_REF_NAME}"
  dependencies:
    - setup_ssh

.deploy_force_esp32p4_github:
  stage: deploy
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - deploy
  when: manual
  only:
    - feature/esp_as_mcu_host
  script:
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - echo -n $GH_KEY > ~/.ssh/id_rsa_base64
      - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - git remote remove github &>/dev/null || true
      - git remote add github git@github.com:espressif/esp-hosted.git
      - git push -f github "${CI_COMMIT_SHA}:refs/heads/${CI_COMMIT_REF_NAME}"
  dependencies:
    - setup_ssh
    
deploy_esp_hosted_comp:
  stage: deploy
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build
  when: always
  only:
    - feature/ext_component_host
  script:
    - export IDF_COMPONENT_API_TOKEN=${ESP_HOSTED_API_KEY}
    - python -m pip install --upgrade idf-component-manager
    - cp -r common host/
    - cp -r common slave/
    - cd host
    - compote component upload --allow-existing --name esp_hosted_master --namespace mantriyogesh --project-dir ./
    - cd ../slave
    - compote component upload --allow-existing --name esp_hosted_slave --namespace mantriyogesh --project-dir ./


